name: Deploy to GoDaddy

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  NODE_VERSION: "20"

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install and build
        run: |
          npm ci
          npm run build
        env:
          NEXT_PUBLIC_SITE_URL: https://jsilverman.ca

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.HOST }} >> ~/.ssh/known_hosts

      - name: Deploy files
        run: |
          # Create and upload archive
          cd out
          tar -czf ../site.tar.gz .
          cd ..
          scp -o StrictHostKeyChecking=no site.tar.gz ${{ secrets.USERNAME }}@${{ secrets.HOST }}:~/

          # Deploy on server
          ssh -o StrictHostKeyChecking=no ${{ secrets.USERNAME }}@${{ secrets.HOST }} '
            # Backup existing files
            [ -d ~/public_html ] && cp -r ~/public_html ~/backup_$(date +%Y%m%d_%H%M%S) 2>/dev/null || true
            
            # Clear and extract
            rm -rf ~/public_html/*
            cd ~/public_html
            tar -xzf ~/site.tar.gz
            rm ~/site.tar.gz
            
            # Set permissions
            find . -type f -exec chmod 644 {} \;
            find . -type d -exec chmod 755 {} \;
            
            echo "Deployment complete - $(find . -type f | wc -l) files deployed"
          '

      - name: Verify
        run: |
          sleep 10
          if curl -f -s https://jsilverman.ca/ > /dev/null; then
            echo "✅ Site is live at https://jsilverman.ca"
          else
            echo "⚠️ Site may still be propagating"
          fi
